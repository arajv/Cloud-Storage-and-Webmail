// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class requestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<request> {
} _request_default_instance_;

namespace protobuf_request_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, request_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, request_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, fd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, val1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, val2_),
  0,
  3,
  4,
  5,
  1,
  2,
  ~0u,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 12, sizeof(request)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_request_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "request.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _request_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _request_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rrequest.proto\"\207\001\n\007request\022\024\n\014request_t"
      "ype\030\001 \002(\t\022\023\n\013request_num\030\002 \002(\005\022\017\n\007succes"
      "s\030\003 \001(\010\022\n\n\002fd\030\004 \001(\005\022\013\n\003row\030\005 \001(\t\022\013\n\003col\030"
      "\006 \001(\t\022\014\n\004val1\030\007 \003(\t\022\014\n\004val2\030\010 \003(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 153);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "request.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_request_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int request::kRequestTypeFieldNumber;
const int request::kRequestNumFieldNumber;
const int request::kSuccessFieldNumber;
const int request::kFdFieldNumber;
const int request::kRowFieldNumber;
const int request::kColFieldNumber;
const int request::kVal1FieldNumber;
const int request::kVal2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

request::request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_request_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:request)
}
request::request(const request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      val1_(from.val1_),
      val2_(from.val2_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_request_type()) {
    request_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_type_);
  }
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_row()) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_col()) {
    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  ::memcpy(&request_num_, &from.request_num_,
    reinterpret_cast<char*>(&fd_) -
    reinterpret_cast<char*>(&request_num_) + sizeof(fd_));
  // @@protoc_insertion_point(copy_constructor:request)
}

void request::SharedCtor() {
  _cached_size_ = 0;
  request_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_num_, 0, reinterpret_cast<char*>(&fd_) -
    reinterpret_cast<char*>(&request_num_) + sizeof(fd_));
}

request::~request() {
  // @@protoc_insertion_point(destructor:request)
  SharedDtor();
}

void request::SharedDtor() {
  request_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* request::descriptor() {
  protobuf_request_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_2eproto::file_level_metadata[0].descriptor;
}

const request& request::default_instance() {
  protobuf_request_2eproto::InitDefaults();
  return *internal_default_instance();
}

request* request::New(::google::protobuf::Arena* arena) const {
  request* n = new request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void request::Clear() {
// @@protoc_insertion_point(message_clear_start:request)
  val1_.Clear();
  val2_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_request_type()) {
      GOOGLE_DCHECK(!request_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*request_type_.UnsafeRawStringPointer())->clear();
    }
    if (has_row()) {
      GOOGLE_DCHECK(!row_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*row_.UnsafeRawStringPointer())->clear();
    }
    if (has_col()) {
      GOOGLE_DCHECK(!col_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*col_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&request_num_, 0, reinterpret_cast<char*>(&fd_) -
      reinterpret_cast<char*>(&request_num_) + sizeof(fd_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string request_type = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request_type().data(), this->request_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request.request_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 request_num = 2;
      case 2: {
        if (tag == 16u) {
          set_has_request_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool success = 3;
      case 3: {
        if (tag == 24u) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fd = 4;
      case 4: {
        if (tag == 32u) {
          set_has_fd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string row = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->row().data(), this->row().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request.row");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string col = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->col().data(), this->col().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request.col");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string val1 = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_val1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val1(this->val1_size() - 1).data(),
            this->val1(this->val1_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request.val1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string val2 = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_val2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val2(this->val2_size() - 1).data(),
            this->val2(this->val2_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request.val2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request)
  return false;
#undef DO_
}

void request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request)
  // required string request_type = 1;
  if (has_request_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_type().data(), this->request_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.request_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_type(), output);
  }

  // required int32 request_num = 2;
  if (has_request_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->request_num(), output);
  }

  // optional bool success = 3;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->success(), output);
  }

  // optional int32 fd = 4;
  if (has_fd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fd(), output);
  }

  // optional string row = 5;
  if (has_row()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->row(), output);
  }

  // optional string col = 6;
  if (has_col()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->col(), output);
  }

  // repeated string val1 = 7;
  for (int i = 0; i < this->val1_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val1(i).data(), this->val1(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.val1");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->val1(i), output);
  }

  // repeated string val2 = 8;
  for (int i = 0; i < this->val2_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val2(i).data(), this->val2(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.val2");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->val2(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request)
}

::google::protobuf::uint8* request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:request)
  // required string request_type = 1;
  if (has_request_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_type().data(), this->request_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.request_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_type(), target);
  }

  // required int32 request_num = 2;
  if (has_request_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->request_num(), target);
  }

  // optional bool success = 3;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->success(), target);
  }

  // optional int32 fd = 4;
  if (has_fd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->fd(), target);
  }

  // optional string row = 5;
  if (has_row()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->row(), target);
  }

  // optional string col = 6;
  if (has_col()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->col(), target);
  }

  // repeated string val1 = 7;
  for (int i = 0; i < this->val1_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val1(i).data(), this->val1(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.val1");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->val1(i), target);
  }

  // repeated string val2 = 8;
  for (int i = 0; i < this->val2_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val2(i).data(), this->val2(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request.val2");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->val2(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request)
  return target;
}

size_t request::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:request)
  size_t total_size = 0;

  if (has_request_type()) {
    // required string request_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_type());
  }

  if (has_request_num()) {
    // required int32 request_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_num());
  }

  return total_size;
}
size_t request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required string request_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_type());

    // required int32 request_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string val1 = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->val1_size());
  for (int i = 0; i < this->val1_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->val1(i));
  }

  // repeated string val2 = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->val2_size());
  for (int i = 0; i < this->val2_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->val2(i));
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string row = 5;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->row());
    }

    // optional string col = 6;
    if (has_col()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->col());
    }

  }
  if (_has_bits_[0 / 32] & 48u) {
    // optional bool success = 3;
    if (has_success()) {
      total_size += 1 + 1;
    }

    // optional int32 fd = 4;
    if (has_fd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fd());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request)
  GOOGLE_DCHECK_NE(&from, this);
  const request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request)
    MergeFrom(*source);
  }
}

void request::MergeFrom(const request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  val1_.MergeFrom(from.val1_);
  val2_.MergeFrom(from.val2_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_request_type()) {
      set_has_request_type();
      request_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_type_);
    }
    if (from.has_row()) {
      set_has_row();
      row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
    }
    if (from.has_col()) {
      set_has_col();
      col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
    }
    if (from.has_request_num()) {
      set_request_num(from.request_num());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_fd()) {
      set_fd(from.fd());
    }
  }
}

void request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void request::CopyFrom(const request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  return true;
}

void request::Swap(request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void request::InternalSwap(request* other) {
  val1_.UnsafeArenaSwap(&other->val1_);
  val2_.UnsafeArenaSwap(&other->val2_);
  request_type_.Swap(&other->request_type_);
  row_.Swap(&other->row_);
  col_.Swap(&other->col_);
  std::swap(request_num_, other->request_num_);
  std::swap(success_, other->success_);
  std::swap(fd_, other->fd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata request::GetMetadata() const {
  protobuf_request_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// request

// required string request_type = 1;
bool request::has_request_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void request::set_has_request_type() {
  _has_bits_[0] |= 0x00000001u;
}
void request::clear_has_request_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void request::clear_request_type() {
  request_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_request_type();
}
const ::std::string& request::request_type() const {
  // @@protoc_insertion_point(field_get:request.request_type)
  return request_type_.GetNoArena();
}
void request::set_request_type(const ::std::string& value) {
  set_has_request_type();
  request_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request.request_type)
}
#if LANG_CXX11
void request::set_request_type(::std::string&& value) {
  set_has_request_type();
  request_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request.request_type)
}
#endif
void request::set_request_type(const char* value) {
  set_has_request_type();
  request_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request.request_type)
}
void request::set_request_type(const char* value, size_t size) {
  set_has_request_type();
  request_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request.request_type)
}
::std::string* request::mutable_request_type() {
  set_has_request_type();
  // @@protoc_insertion_point(field_mutable:request.request_type)
  return request_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* request::release_request_type() {
  // @@protoc_insertion_point(field_release:request.request_type)
  clear_has_request_type();
  return request_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void request::set_allocated_request_type(::std::string* request_type) {
  if (request_type != NULL) {
    set_has_request_type();
  } else {
    clear_has_request_type();
  }
  request_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_type);
  // @@protoc_insertion_point(field_set_allocated:request.request_type)
}

// required int32 request_num = 2;
bool request::has_request_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void request::set_has_request_num() {
  _has_bits_[0] |= 0x00000008u;
}
void request::clear_has_request_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void request::clear_request_num() {
  request_num_ = 0;
  clear_has_request_num();
}
::google::protobuf::int32 request::request_num() const {
  // @@protoc_insertion_point(field_get:request.request_num)
  return request_num_;
}
void request::set_request_num(::google::protobuf::int32 value) {
  set_has_request_num();
  request_num_ = value;
  // @@protoc_insertion_point(field_set:request.request_num)
}

// optional bool success = 3;
bool request::has_success() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void request::set_has_success() {
  _has_bits_[0] |= 0x00000010u;
}
void request::clear_has_success() {
  _has_bits_[0] &= ~0x00000010u;
}
void request::clear_success() {
  success_ = false;
  clear_has_success();
}
bool request::success() const {
  // @@protoc_insertion_point(field_get:request.success)
  return success_;
}
void request::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:request.success)
}

// optional int32 fd = 4;
bool request::has_fd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void request::set_has_fd() {
  _has_bits_[0] |= 0x00000020u;
}
void request::clear_has_fd() {
  _has_bits_[0] &= ~0x00000020u;
}
void request::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
::google::protobuf::int32 request::fd() const {
  // @@protoc_insertion_point(field_get:request.fd)
  return fd_;
}
void request::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:request.fd)
}

// optional string row = 5;
bool request::has_row() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void request::set_has_row() {
  _has_bits_[0] |= 0x00000002u;
}
void request::clear_has_row() {
  _has_bits_[0] &= ~0x00000002u;
}
void request::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_row();
}
const ::std::string& request::row() const {
  // @@protoc_insertion_point(field_get:request.row)
  return row_.GetNoArena();
}
void request::set_row(const ::std::string& value) {
  set_has_row();
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request.row)
}
#if LANG_CXX11
void request::set_row(::std::string&& value) {
  set_has_row();
  row_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request.row)
}
#endif
void request::set_row(const char* value) {
  set_has_row();
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request.row)
}
void request::set_row(const char* value, size_t size) {
  set_has_row();
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request.row)
}
::std::string* request::mutable_row() {
  set_has_row();
  // @@protoc_insertion_point(field_mutable:request.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* request::release_row() {
  // @@protoc_insertion_point(field_release:request.row)
  clear_has_row();
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void request::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    set_has_row();
  } else {
    clear_has_row();
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:request.row)
}

// optional string col = 6;
bool request::has_col() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void request::set_has_col() {
  _has_bits_[0] |= 0x00000004u;
}
void request::clear_has_col() {
  _has_bits_[0] &= ~0x00000004u;
}
void request::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_col();
}
const ::std::string& request::col() const {
  // @@protoc_insertion_point(field_get:request.col)
  return col_.GetNoArena();
}
void request::set_col(const ::std::string& value) {
  set_has_col();
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request.col)
}
#if LANG_CXX11
void request::set_col(::std::string&& value) {
  set_has_col();
  col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request.col)
}
#endif
void request::set_col(const char* value) {
  set_has_col();
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request.col)
}
void request::set_col(const char* value, size_t size) {
  set_has_col();
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request.col)
}
::std::string* request::mutable_col() {
  set_has_col();
  // @@protoc_insertion_point(field_mutable:request.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* request::release_col() {
  // @@protoc_insertion_point(field_release:request.col)
  clear_has_col();
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void request::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    set_has_col();
  } else {
    clear_has_col();
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:request.col)
}

// repeated string val1 = 7;
int request::val1_size() const {
  return val1_.size();
}
void request::clear_val1() {
  val1_.Clear();
}
const ::std::string& request::val1(int index) const {
  // @@protoc_insertion_point(field_get:request.val1)
  return val1_.Get(index);
}
::std::string* request::mutable_val1(int index) {
  // @@protoc_insertion_point(field_mutable:request.val1)
  return val1_.Mutable(index);
}
void request::set_val1(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:request.val1)
  val1_.Mutable(index)->assign(value);
}
void request::set_val1(int index, const char* value) {
  val1_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:request.val1)
}
void request::set_val1(int index, const char* value, size_t size) {
  val1_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:request.val1)
}
::std::string* request::add_val1() {
  // @@protoc_insertion_point(field_add_mutable:request.val1)
  return val1_.Add();
}
void request::add_val1(const ::std::string& value) {
  val1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:request.val1)
}
void request::add_val1(const char* value) {
  val1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:request.val1)
}
void request::add_val1(const char* value, size_t size) {
  val1_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:request.val1)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
request::val1() const {
  // @@protoc_insertion_point(field_list:request.val1)
  return val1_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
request::mutable_val1() {
  // @@protoc_insertion_point(field_mutable_list:request.val1)
  return &val1_;
}

// repeated string val2 = 8;
int request::val2_size() const {
  return val2_.size();
}
void request::clear_val2() {
  val2_.Clear();
}
const ::std::string& request::val2(int index) const {
  // @@protoc_insertion_point(field_get:request.val2)
  return val2_.Get(index);
}
::std::string* request::mutable_val2(int index) {
  // @@protoc_insertion_point(field_mutable:request.val2)
  return val2_.Mutable(index);
}
void request::set_val2(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:request.val2)
  val2_.Mutable(index)->assign(value);
}
void request::set_val2(int index, const char* value) {
  val2_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:request.val2)
}
void request::set_val2(int index, const char* value, size_t size) {
  val2_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:request.val2)
}
::std::string* request::add_val2() {
  // @@protoc_insertion_point(field_add_mutable:request.val2)
  return val2_.Add();
}
void request::add_val2(const ::std::string& value) {
  val2_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:request.val2)
}
void request::add_val2(const char* value) {
  val2_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:request.val2)
}
void request::add_val2(const char* value, size_t size) {
  val2_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:request.val2)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
request::val2() const {
  // @@protoc_insertion_point(field_list:request.val2)
  return val2_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
request::mutable_val2() {
  // @@protoc_insertion_point(field_mutable_list:request.val2)
  return &val2_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
