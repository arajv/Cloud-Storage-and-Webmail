// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef PROTOBUF_request_2eproto__INCLUDED
#define PROTOBUF_request_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class request;
class requestDefaultTypeInternal;
extern requestDefaultTypeInternal _request_default_instance_;

namespace protobuf_request_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_request_2eproto

// ===================================================================

class request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:request) */ {
 public:
  request();
  virtual ~request();

  request(const request& from);

  inline request& operator=(const request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const request& default_instance();

  static inline const request* internal_default_instance() {
    return reinterpret_cast<const request*>(
               &_request_default_instance_);
  }

  void Swap(request* other);

  // implements Message ----------------------------------------------

  inline request* New() const PROTOBUF_FINAL { return New(NULL); }

  request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const request& from);
  void MergeFrom(const request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string val1 = 7;
  int val1_size() const;
  void clear_val1();
  static const int kVal1FieldNumber = 7;
  const ::std::string& val1(int index) const;
  ::std::string* mutable_val1(int index);
  void set_val1(int index, const ::std::string& value);
  void set_val1(int index, const char* value);
  void set_val1(int index, const char* value, size_t size);
  ::std::string* add_val1();
  void add_val1(const ::std::string& value);
  void add_val1(const char* value);
  void add_val1(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& val1() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_val1();

  // repeated string val2 = 8;
  int val2_size() const;
  void clear_val2();
  static const int kVal2FieldNumber = 8;
  const ::std::string& val2(int index) const;
  ::std::string* mutable_val2(int index);
  void set_val2(int index, const ::std::string& value);
  void set_val2(int index, const char* value);
  void set_val2(int index, const char* value, size_t size);
  ::std::string* add_val2();
  void add_val2(const ::std::string& value);
  void add_val2(const char* value);
  void add_val2(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& val2() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_val2();

  // required string request_type = 1;
  bool has_request_type() const;
  void clear_request_type();
  static const int kRequestTypeFieldNumber = 1;
  const ::std::string& request_type() const;
  void set_request_type(const ::std::string& value);
  #if LANG_CXX11
  void set_request_type(::std::string&& value);
  #endif
  void set_request_type(const char* value);
  void set_request_type(const char* value, size_t size);
  ::std::string* mutable_request_type();
  ::std::string* release_request_type();
  void set_allocated_request_type(::std::string* request_type);

  // optional string row = 5;
  bool has_row() const;
  void clear_row();
  static const int kRowFieldNumber = 5;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  #if LANG_CXX11
  void set_row(::std::string&& value);
  #endif
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 6;
  bool has_col() const;
  void clear_col();
  static const int kColFieldNumber = 6;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  #if LANG_CXX11
  void set_col(::std::string&& value);
  #endif
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // required int32 request_num = 2;
  bool has_request_num() const;
  void clear_request_num();
  static const int kRequestNumFieldNumber = 2;
  ::google::protobuf::int32 request_num() const;
  void set_request_num(::google::protobuf::int32 value);

  // optional bool success = 3;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 3;
  bool success() const;
  void set_success(bool value);

  // optional int32 fd = 4;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 4;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:request)
 private:
  void set_has_request_type();
  void clear_has_request_type();
  void set_has_request_num();
  void clear_has_request_num();
  void set_has_success();
  void clear_has_success();
  void set_has_fd();
  void clear_has_fd();
  void set_has_row();
  void clear_has_row();
  void set_has_col();
  void clear_has_col();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> val1_;
  ::google::protobuf::RepeatedPtrField< ::std::string> val2_;
  ::google::protobuf::internal::ArenaStringPtr request_type_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  ::google::protobuf::int32 request_num_;
  bool success_;
  ::google::protobuf::int32 fd_;
  friend struct  protobuf_request_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// request

// required string request_type = 1;
inline bool request::has_request_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void request::set_has_request_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void request::clear_has_request_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void request::clear_request_type() {
  request_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_request_type();
}
inline const ::std::string& request::request_type() const {
  // @@protoc_insertion_point(field_get:request.request_type)
  return request_type_.GetNoArena();
}
inline void request::set_request_type(const ::std::string& value) {
  set_has_request_type();
  request_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request.request_type)
}
#if LANG_CXX11
inline void request::set_request_type(::std::string&& value) {
  set_has_request_type();
  request_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request.request_type)
}
#endif
inline void request::set_request_type(const char* value) {
  set_has_request_type();
  request_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request.request_type)
}
inline void request::set_request_type(const char* value, size_t size) {
  set_has_request_type();
  request_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request.request_type)
}
inline ::std::string* request::mutable_request_type() {
  set_has_request_type();
  // @@protoc_insertion_point(field_mutable:request.request_type)
  return request_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* request::release_request_type() {
  // @@protoc_insertion_point(field_release:request.request_type)
  clear_has_request_type();
  return request_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void request::set_allocated_request_type(::std::string* request_type) {
  if (request_type != NULL) {
    set_has_request_type();
  } else {
    clear_has_request_type();
  }
  request_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_type);
  // @@protoc_insertion_point(field_set_allocated:request.request_type)
}

// required int32 request_num = 2;
inline bool request::has_request_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void request::set_has_request_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void request::clear_has_request_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void request::clear_request_num() {
  request_num_ = 0;
  clear_has_request_num();
}
inline ::google::protobuf::int32 request::request_num() const {
  // @@protoc_insertion_point(field_get:request.request_num)
  return request_num_;
}
inline void request::set_request_num(::google::protobuf::int32 value) {
  set_has_request_num();
  request_num_ = value;
  // @@protoc_insertion_point(field_set:request.request_num)
}

// optional bool success = 3;
inline bool request::has_success() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void request::set_has_success() {
  _has_bits_[0] |= 0x00000010u;
}
inline void request::clear_has_success() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void request::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool request::success() const {
  // @@protoc_insertion_point(field_get:request.success)
  return success_;
}
inline void request::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:request.success)
}

// optional int32 fd = 4;
inline bool request::has_fd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void request::set_has_fd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void request::clear_has_fd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void request::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 request::fd() const {
  // @@protoc_insertion_point(field_get:request.fd)
  return fd_;
}
inline void request::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:request.fd)
}

// optional string row = 5;
inline bool request::has_row() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void request::set_has_row() {
  _has_bits_[0] |= 0x00000002u;
}
inline void request::clear_has_row() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void request::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_row();
}
inline const ::std::string& request::row() const {
  // @@protoc_insertion_point(field_get:request.row)
  return row_.GetNoArena();
}
inline void request::set_row(const ::std::string& value) {
  set_has_row();
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request.row)
}
#if LANG_CXX11
inline void request::set_row(::std::string&& value) {
  set_has_row();
  row_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request.row)
}
#endif
inline void request::set_row(const char* value) {
  set_has_row();
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request.row)
}
inline void request::set_row(const char* value, size_t size) {
  set_has_row();
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request.row)
}
inline ::std::string* request::mutable_row() {
  set_has_row();
  // @@protoc_insertion_point(field_mutable:request.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* request::release_row() {
  // @@protoc_insertion_point(field_release:request.row)
  clear_has_row();
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void request::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    set_has_row();
  } else {
    clear_has_row();
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:request.row)
}

// optional string col = 6;
inline bool request::has_col() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void request::set_has_col() {
  _has_bits_[0] |= 0x00000004u;
}
inline void request::clear_has_col() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void request::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_col();
}
inline const ::std::string& request::col() const {
  // @@protoc_insertion_point(field_get:request.col)
  return col_.GetNoArena();
}
inline void request::set_col(const ::std::string& value) {
  set_has_col();
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request.col)
}
#if LANG_CXX11
inline void request::set_col(::std::string&& value) {
  set_has_col();
  col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request.col)
}
#endif
inline void request::set_col(const char* value) {
  set_has_col();
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request.col)
}
inline void request::set_col(const char* value, size_t size) {
  set_has_col();
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request.col)
}
inline ::std::string* request::mutable_col() {
  set_has_col();
  // @@protoc_insertion_point(field_mutable:request.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* request::release_col() {
  // @@protoc_insertion_point(field_release:request.col)
  clear_has_col();
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void request::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    set_has_col();
  } else {
    clear_has_col();
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:request.col)
}

// repeated string val1 = 7;
inline int request::val1_size() const {
  return val1_.size();
}
inline void request::clear_val1() {
  val1_.Clear();
}
inline const ::std::string& request::val1(int index) const {
  // @@protoc_insertion_point(field_get:request.val1)
  return val1_.Get(index);
}
inline ::std::string* request::mutable_val1(int index) {
  // @@protoc_insertion_point(field_mutable:request.val1)
  return val1_.Mutable(index);
}
inline void request::set_val1(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:request.val1)
  val1_.Mutable(index)->assign(value);
}
inline void request::set_val1(int index, const char* value) {
  val1_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:request.val1)
}
inline void request::set_val1(int index, const char* value, size_t size) {
  val1_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:request.val1)
}
inline ::std::string* request::add_val1() {
  // @@protoc_insertion_point(field_add_mutable:request.val1)
  return val1_.Add();
}
inline void request::add_val1(const ::std::string& value) {
  val1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:request.val1)
}
inline void request::add_val1(const char* value) {
  val1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:request.val1)
}
inline void request::add_val1(const char* value, size_t size) {
  val1_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:request.val1)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
request::val1() const {
  // @@protoc_insertion_point(field_list:request.val1)
  return val1_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
request::mutable_val1() {
  // @@protoc_insertion_point(field_mutable_list:request.val1)
  return &val1_;
}

// repeated string val2 = 8;
inline int request::val2_size() const {
  return val2_.size();
}
inline void request::clear_val2() {
  val2_.Clear();
}
inline const ::std::string& request::val2(int index) const {
  // @@protoc_insertion_point(field_get:request.val2)
  return val2_.Get(index);
}
inline ::std::string* request::mutable_val2(int index) {
  // @@protoc_insertion_point(field_mutable:request.val2)
  return val2_.Mutable(index);
}
inline void request::set_val2(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:request.val2)
  val2_.Mutable(index)->assign(value);
}
inline void request::set_val2(int index, const char* value) {
  val2_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:request.val2)
}
inline void request::set_val2(int index, const char* value, size_t size) {
  val2_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:request.val2)
}
inline ::std::string* request::add_val2() {
  // @@protoc_insertion_point(field_add_mutable:request.val2)
  return val2_.Add();
}
inline void request::add_val2(const ::std::string& value) {
  val2_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:request.val2)
}
inline void request::add_val2(const char* value) {
  val2_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:request.val2)
}
inline void request::add_val2(const char* value, size_t size) {
  val2_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:request.val2)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
request::val2() const {
  // @@protoc_insertion_point(field_list:request.val2)
  return val2_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
request::mutable_val2() {
  // @@protoc_insertion_point(field_mutable_list:request.val2)
  return &val2_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_2eproto__INCLUDED
